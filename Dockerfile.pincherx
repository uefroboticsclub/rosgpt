# # Base image
# # FROM osrf/ros:noetic-desktop
# FROM arm64v8/ros:noetic

# # Create workspace folders
# ENV MAIN_WORKSPACE=/main_workspace
# ENV PACKAGE_WORKSPACE=/package_workspace
# RUN mkdir -p $MAIN_WORKSPACE/src
# RUN mkdir -p $PACKAGE_WORKSPACE/src

# # Setup user
# ARG UNAME=user
# ARG UID=1000
# ARG GID=1000
# RUN groupadd -g ${GID} -o ${UNAME}
# RUN useradd -m -u ${UID} -g ${GID} -o -s /bin/bash ${UNAME}
# RUN usermod -aG sudo ${UNAME}
# RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# USER ${UNAME}
# WORKDIR "/home/user"

# # Install Python and required packages
# RUN sudo apt update && sudo apt install -y python3 python3-pip curl

# # Install Interbotix PincherX packages
# RUN sudo apt install curl && \
#     curl 'https://raw.githubusercontent.com/Interbotix/interbotix_ros_manipulators/main/interbotix_ros_xsarms/install/amd64/xsarm_amd64_install.sh' > xsarm_amd64_install.sh && \
#     chmod +x xsarm_amd64_install.sh && \
#     ./xsarm_amd64_install.sh -d humble -p '/home/user' -n

# # Install required Python packages for ROSGPT
# RUN pip3 install --user \
#     python-dotenv \
#     langchain \
#     langchain-groq \
#     pyinputplus \
#     rich \
#     rclpy

# # Setup ROS environment
# RUN echo 'source /opt/ros/$ROS_DISTRO/setup.bash' >> ~/.bashrc && \
#     echo 'source /home/user/install/setup.bash' >> ~/.bashrc

# # Copy the ros entrypoint script
# COPY --chown=${UID}:${GID} ros_entrypoint.sh /ros_entrypoint.sh
# RUN sudo chmod +x /ros_entrypoint.sh

# # Make Python scripts directory
# RUN mkdir -p /home/user/xsarm_python
# RUN chmod 777 /home/user/xsarm_python

# # Copy the application code
# COPY --chown=${UID}:${GID} . /app/

# # Install the package
# RUN cd /app && pip3 install --user -e .

# ENTRYPOINT ["/ros_entrypoint.sh"]
# CMD ["bash"]

# Base image - use Ubuntu 22.04 which supports ROS2 Humble
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV ROS_DISTRO=humble

# Install basic utilities and setup locale
RUN apt update && apt install -y \
    curl \
    wget \
    gnupg2 \
    lsb-release \
    sudo \
    git \
    python3 \
    python3-pip \
    locales \
    && rm -rf /var/lib/apt/lists/* \
    && locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

# Setup sources for ROS 2
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS 2
RUN apt update && apt install -y \
    ros-humble-desktop-full \
    ros-dev-tools \
    && rm -rf /var/lib/apt/lists/*

# Create workspace folders
ENV MAIN_WORKSPACE=/main_workspace
ENV PACKAGE_WORKSPACE=/package_workspace
RUN mkdir -p $MAIN_WORKSPACE/src
RUN mkdir -p $PACKAGE_WORKSPACE/src

# Setup user
ARG UNAME=user
ARG UID=1000
ARG GID=1000
RUN groupadd -g ${GID} -o ${UNAME}
RUN useradd -m -u ${UID} -g ${GID} -o -s /bin/bash ${UNAME}
RUN usermod -aG sudo ${UNAME}
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER ${UNAME}
WORKDIR "/home/user"

# Install Interbotix PincherX packages
RUN curl 'https://raw.githubusercontent.com/Interbotix/interbotix_ros_manipulators/main/interbotix_ros_xsarms/install/amd64/xsarm_amd64_install.sh' > xsarm_amd64_install.sh && \
    chmod +x xsarm_amd64_install.sh && \
    ./xsarm_amd64_install.sh -d humble -p '/home/user' -n

# Install required Python packages for ROSGPT
RUN pip3 install --user \
    python-dotenv \
    langchain \
    langchain-groq \
    pyinputplus \
    rich \
    rclpy

# Setup ROS environment
RUN echo 'source /opt/ros/$ROS_DISTRO/setup.bash' >> ~/.bashrc && \
    echo 'source /home/user/install/setup.bash' >> ~/.bashrc

# Copy the ros entrypoint script
COPY --chown=${UID}:${GID} ros_entrypoint.sh /ros_entrypoint.sh
RUN sudo chmod +x /ros_entrypoint.sh

# Make Python scripts directory
RUN mkdir -p /home/user/xsarm_python
RUN chmod 777 /home/user/xsarm_python

# Copy the application code
USER root
COPY --chown=${UID}:${GID} . /app/
USER ${UNAME}

# Install the package
RUN cd /app && pip3 install --user -e .

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]